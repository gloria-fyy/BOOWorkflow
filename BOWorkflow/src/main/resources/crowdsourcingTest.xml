<?xml version="1.0"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml"
       version="1.0"
       datamodel="jexl"
       initial="init"
       name="crowdsourcing">

    <!-- 请假单需要的数据-->
    <datamodel>
        <data id="deployee" expr=""></data>
        <data id="taskName" expr=""></data>
        <data id="taskDescription" expr=""></data>
        <data id="dueDate"></data>

        <data id="judgeCount" expr="3"></data>
        <data id="decomposeCount" expr="2"></data>
        <data id="decomposeVoteCount" expr="3"></data>
        <data id="solveCount" expr="2"></data>
        <data id="solveVoteCount" expr="3"></data>
    </datamodel>

    <state id="init">
        <onentry>
            <log expr="'init state entry ,begin to initialization'"/>

            <log expr="'initialization complete'"></log>
        </onentry>
        <transition target="judging">
            <log expr="'init state transition to judging'"/>
        </transition>
        <onexit>
            <log expr="'init state exit'"/>
        </onexit>
    </state>

    <!-- 判断 -->

    <state id="judging">
        <datamodel>
            <data id="complexCount" expr="0"></data>
            <data id="simpleCount" expr="0"></data>
        </datamodel>
        <onentry>
            <log expr="'entry judging state'"/>
            <userTask id="judge" name="JudgeTask" candidateGroups="Judger" instancesExpr="judgeCount">
                <form src="form/judge.jsp">

                </form>
            </userTask>
        </onentry>
        <onexit>
            <log expr="'exit judging state'"/>
        </onexit>

        <transition event="judgeComplete" >
            <if cond="_event.data.simple eq 0">
                <assign location="simpleCount" expr="simpleCount + 1"></assign>
                <log expr="' simple'"/>

                <elseif cond="_event.data.simple eq 1"/>
                    <assign location="complexCount" expr="complexCount + 1"></assign>
                    <log expr="' complex'"/>

                <else/>
                    <log expr="_event.data.simple"/>
            </if>
            <if cond="simpleCount + complexCount eq judgeCount">
                <send event="judgeCompleted"></send>
                <log expr="'send event judgeCompleted'"/>
            </if>
            <log expr="'judge state inner transition'"/>

        </transition>

        <transition event="judgeCompleted" cond="simpleCount gt complexCount" target="solving">
            <log expr="'judge state transition to solving'"/>
        </transition>

        <transition event="judgeCompleted" cond="simpleCount lt complexCount" target="decomposing">
            <log expr="'judge state transition to decomposing'"/>
        </transition>

    </state>


    <!-- 分解 -->
    <state id="decomposing">
        <datamodel>
            <data id="counted" expr="0"></data>
            <data id="step" expr="0"></data>
        </datamodel>
        <onentry>
            <log expr="'entry decomposing state'"/>
            <userTask id="decompose" name="DecomposeTask" candidateGroups="Decomposer"
                      instancesExpr="decomposeCount">
                <form src="form/decompose.jsp">

                </form>
            </userTask>
        </onentry>

        <transition event="decomposeComplete">
            <assign location="counted" expr="counted + 1"></assign>
            <!-- 写入数据库: 谁分解成了什么 -->
        </transition>
        <transition cond="counted eq decomposeCount" target="decomposeVoting"></transition>

        <onexit>
            <log expr="'exit decomposing state'"/>
        </onexit>
    </state>

    <!-- 分解投票 -->

    <state id="decomposeVoting">
        <datamodel>
            <data id="counted" expr="0"></data>
        </datamodel>
        <onentry>
            <userTask id="decompose" name="DecomposeVoteTask" candidateGroups="DecomposeVoter"
                      instancesExpr="decomposeVoteCount">
                <form src="form/decomposeVote.jsp">

                </form>
            </userTask>
        </onentry>
        <transition event="decomposeVoteComplete">
            <assign location="counted" expr="counted + 1"></assign>
        </transition>
        <transition cond="counted eq decomposeVoteCount" target="end">

            <!-- 查询数据库，找出分解最好的方案，启动这些实例 -->


            <!-- 投票结束了，选出最好的投票解决，调用本xml文件作为子状态机， -->

        </transition>
    </state>

    <!-- 解决 -->
    <state id="solving">
        <datamodel>
            <data id="counted" expr="0"></data>
        </datamodel>
        <onentry>
            <userTask id="solve" name="SolveTask" candidateGroups="Solver"
                      instancesExpr="solveCount">
                <form src="form/solve.jsp">

                </form>
            </userTask>
        </onentry>
        <transition event="solveComplete">
            <assign location="counted" expr="counted + 1"></assign>
            <!-- 保存解决结果到数据库 -->
        </transition>
        <transition cond="counted eq solveCount" target="solveVoting"></transition>
    </state>

    <!-- 解决投票 -->
    <state id="solveVoting">
        <datamodel>
            <data id="counted" expr="0"></data>
        </datamodel>
        <onentry>
            <userTask id="solveVoting" name="SolveVoteTask" candidateGroups="SolveVoter"
                      instancesExpr="solveVoteCount">
                <form src="form/solveVote.jsp">

                </form>
            </userTask>
        </onentry>
        <transition event="solveVoteComplete">
            <assign location="counted" expr="counted + 1"></assign>
            <!-- 保存到数据库  谁投了谁 -->
        </transition>
        <transition cond="counted eq solveVoteCount" target="end"></transition>
    </state>

    <final id="end">
    </final>
</scxml>
